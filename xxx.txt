<powershell>
 # Required environment variables
 $env:CHEF_SERVER_NAME = "auto-test-server-for-bootstrapping" # Name of your Chef Server
 $env:CHEF_SERVER_ENDPOINT = "auto-test-server-for-bootstrapping-pcv0azcqcumunztu.us-west-2.opsworks-cm.io" # FQDN of your Chef Server
 $env:REGION = "us-west-2" # Region of your Chef Server (choose one of our supported regions - us-east-1, us-east-2, us-west-1, us-west-2, eu-central-1, eu-west-1, ap-northeast-1, ap-southeast-1, ap-southeast-2)

 # Optional environment variables
 
 $env:CHEF_ORGANIZATION = "default" # AWS OpsWorks for Chef Server always creates the organization "default"
 $env:CHEF_NODE_ENVIRONMENT = "" # E.g. development, staging, onebox...
 $env:CHEF_CLIENT_VERSION = "" # Latest, if left empty

 # Recommended: Upload the chef-client cookbook from the Chef Supermarket  https://supermarket.chef.io/cookbooks/chef-client
 # Use this to apply sensible default settings for your chef-client config like logrotate and running as a service
 # You can add more cookbooks in the run list, based on your needs
 # Compliance runs require recipe[audit] to be added to the runlist.
 $env:CHEF_RUN_LIST="recipe[chef-client],recipe[demo],recipe[audit]" # Use this role when following the starter kit example or specify recipes like recipe[chef-client],recipe[apache2] etc.

 # Chef installation parameters
 $env:CHEF_FOLDER = "C:\chef"
 # New-Item $env:CHEF_FOLDER -ItemType Directory
 $env:CHEF_TRUSTED_CERTS_PATH = "c:\chef\trusted_certs"
 New-Item $env:CHEF_TRUSTED_CERTS_PATH -ItemType Directory
 $env:CLIENT_KEY = "$env:CHEF_FOLDER\client.pem"
 $env:the_public_key = "$env:CHEF_FOLDER\client.pub"



function install_aws_cli {
New-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "LocalAccountTokenFilterPolicy" -Value 1 -PropertyType "DWORD" -Confirm:$false -Force
Enable-PSRemoting -Confirm:$false
winrm quickconfig
netsh advfirewall firewall add rule name="WinRM-HTTP" dir=in localport=5985 protocol=TCP action=allow
netsh advfirewall firewall add rule name="WinRM-HTTPS" dir=in localport=5986 protocol=TCP action=allow
winrm set winrm/config/client/auth '@{Basic="true"}'
winrm set winrm/config/service/auth '@{Basic="true"}'
winrm set winrm/config/service '@{AllowUnencrypted="true"}'
winrm set winrm/config/winrs '@{MaxMemoryPerShellMB="1024"}'
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')) 
choco upgrade chocolatey
choco install awscli -y --force
}

 install_aws_cli

</powershell>